/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Controller.ProductsController;
import Model.DBSearch;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class UpdateDeleteProducts extends javax.swing.JFrame {

    /** Creates new form Products */
    private DBSearch dbSearch;

    public UpdateDeleteProducts() {
        initComponents();
        dbSearch = new DBSearch();

    }
      
    public void clearField() {
        productNameInput.setText("");
        initialStockQuantityInput.setText("");
        perUnitSellingPriceInput.setText("");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CloseBtn = new javax.swing.JLabel();
        getProductDataBtn = new javax.swing.JButton();
        DeleteProductBtn = new javax.swing.JButton();
        UpdateProductBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        productNameInput = new javax.swing.JTextField();
        productIdLabel1 = new javax.swing.JLabel();
        productIdInput = new javax.swing.JTextField();
        productNameLable = new javax.swing.JLabel();
        categoryLable = new javax.swing.JLabel();
        productCategoryCB = new javax.swing.JComboBox<>();
        initialStockQuantityLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        initialStockQuantityInput = new javax.swing.JTextField();
        perUnitSellingPriceInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CloseBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CloseBtn.setForeground(new java.awt.Color(153, 0, 0));
        CloseBtn.setText("X");
        CloseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseBtnMouseClicked(evt);
            }
        });
        jPanel1.add(CloseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 21, -1, 21));

        getProductDataBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getProductDataBtn.setText("Get Data");
        getProductDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getProductDataBtnActionPerformed(evt);
            }
        });
        jPanel1.add(getProductDataBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, -1, -1));

        DeleteProductBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        DeleteProductBtn.setText("Delete Product Details");
        DeleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductBtnActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteProductBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, -1, -1));

        UpdateProductBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UpdateProductBtn.setText("Update Product Details");
        UpdateProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateProductBtnActionPerformed(evt);
            }
        });
        jPanel1.add(UpdateProductBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dubai", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Crochet Items Management System - Update & Delete Product");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 623, -1));

        productNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameInputActionPerformed(evt);
            }
        });
        jPanel1.add(productNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 250, -1));

        productIdLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        productIdLabel1.setText("Product ID");
        jPanel1.add(productIdLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));
        jPanel1.add(productIdInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 110, 150, -1));

        productNameLable.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        productNameLable.setText("Product Name");
        jPanel1.add(productNameLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, -1, -1));

        categoryLable.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        categoryLable.setText("Category");
        jPanel1.add(categoryLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, -1, -1));

        productCategoryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sweaters", "Coasters", "Amigurumi", "Bags", "Blankets", "Scarves", "Hats", "Ice Caps", "Baby Frocks", "Key Tags", "Crop tops", "Dream catchers" }));
        productCategoryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productCategoryCBActionPerformed(evt);
            }
        });
        jPanel1.add(productCategoryCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 170, -1));

        initialStockQuantityLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        initialStockQuantityLabel.setText("Initial Stock Quantity");
        jPanel1.add(initialStockQuantityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Per Unit Selling Price (Rs.)");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, -1, -1));
        jPanel1.add(initialStockQuantityInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 170, -1));

        perUnitSellingPriceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perUnitSellingPriceInputActionPerformed(evt);
            }
        });
        jPanel1.add(perUnitSellingPriceInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 300, 170, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Bg-image2.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 800, 500));

        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Bashi's boutique");
        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CloseBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseBtnMouseClicked
        dispose();
    }//GEN-LAST:event_CloseBtnMouseClicked

    private void getProductDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getProductDataBtnActionPerformed
        try {
            clearField();
            String productID = productIdInput.getText().trim();

            if (productID == null) {
                JOptionPane.showMessageDialog(this, "Please Type a ProductID.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            ResultSet resultSet = dbSearch.searchProductDetailsByID(productID);

            if (resultSet != null && resultSet.next()) {
                productNameInput.setText(resultSet.getString("productName"));
                productCategoryCB.setSelectedItem(resultSet.getString("category"));
                initialStockQuantityInput.setText(resultSet.getString("initialStockQuantity"));
                perUnitSellingPriceInput.setText(resultSet.getString("sellingPrice"));

            } else {
                JOptionPane.showMessageDialog(this, "No Product found for the Typed productID.", "No Data", JOptionPane.INFORMATION_MESSAGE);
            }

            if (resultSet != null && !resultSet.isClosed()) {
                resultSet.close();
            }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "An error occurred while searching for Products.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_getProductDataBtnActionPerformed

    private void DeleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductBtnActionPerformed
            String productID = productIdInput.getText().trim();

        if (productID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Products ProductID must be filled out",
                "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Confirm with the user before deleting
            int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Product Details?",
                "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            // If user confirms deletion
            if (confirmation == JOptionPane.YES_OPTION) {
                try {
                    boolean success = ProductsController.deleteProduct(productID);

                    if (success) {
                        JOptionPane.showMessageDialog(null, "Product Details deleted successfully",
                            "Deletion Successful", JOptionPane.INFORMATION_MESSAGE);
                        // Clear the input fields after successful deletion
                        clearField();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to delete Product",
                            "Deletion Failed", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    // Handle SQL exception
                    JOptionPane.showMessageDialog(null, "An error occurred while deleting Product",
                        "Deletion Failed", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_DeleteProductBtnActionPerformed

    private void UpdateProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateProductBtnActionPerformed
        
// Get the values from the fields
        String productID = productIdInput.getText().trim();
        String productName = productNameInput.getText().trim();
        String iSQ = initialStockQuantityInput.getText().trim();
        String category = (String) productCategoryCB.getSelectedItem();
        String perUnitSellingPrice = perUnitSellingPriceInput.getText().trim();

        // Check if any of the fields are blank
        if (productID.isEmpty() || productName.isEmpty() || iSQ.isEmpty() || category == null || perUnitSellingPrice.isEmpty()) {
            // Show an error message
            JOptionPane.showMessageDialog(null, "All fields must be filled out", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {

            boolean success = false;
            try {
                success = ProductsController.updateProduct(productID, productName, 
                        iSQ, category, perUnitSellingPrice);
            } catch (SQLException ex) {
                    ex.printStackTrace();
            }
            if (success) {
                JOptionPane.showMessageDialog(null, "Product information updated successfully",
                    "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                clearField();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update Product information",
                    "Update Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_UpdateProductBtnActionPerformed

    private void productNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameInputActionPerformed

    private void productCategoryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productCategoryCBActionPerformed
        // TODO add your handling code here:
        String title = (String) productCategoryCB.getSelectedItem();
    }//GEN-LAST:event_productCategoryCBActionPerformed

    private void perUnitSellingPriceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perUnitSellingPriceInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perUnitSellingPriceInputActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CloseBtn;
    private javax.swing.JButton DeleteProductBtn;
    private javax.swing.JButton UpdateProductBtn;
    private javax.swing.JLabel categoryLable;
    private javax.swing.JButton getProductDataBtn;
    private javax.swing.JTextField initialStockQuantityInput;
    private javax.swing.JLabel initialStockQuantityLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField perUnitSellingPriceInput;
    private javax.swing.JComboBox<String> productCategoryCB;
    private javax.swing.JTextField productIdInput;
    private javax.swing.JLabel productIdLabel1;
    private javax.swing.JTextField productNameInput;
    private javax.swing.JLabel productNameLable;
    // End of variables declaration//GEN-END:variables

}
